services:
  backend:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.backend
    container_name: healthcare_backend_prod
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data
    env_file:
      - ../.env
    networks:
      - healthcare_network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - GROQ_API_KEY=${GROQ_API_KEY}

  frontend:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.frontend
    container_name: healthcare_frontend_prod
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ../.env
    networks:
      - healthcare_network
    restart: unless-stopped
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:alpine
    container_name: healthcare_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - healthcare_network
    restart: unless-stopped

networks:
  healthcare_network:
    driver: bridge
